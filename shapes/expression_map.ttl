###############################################################################
# RML Expression Map shape                                                    #
# Copyright Dylan Van Assche, IDLab - UGent - imec (2023 - 2024)              #
###############################################################################
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix : <http://w3id.org/rml/shapes/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rml: <http://w3id.org/rml/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> . 

:RMLExpressionMapShape
    a sh:NodeShape ;
    rdfs:label "ExpressionMap" ;
    rdfs:comment """
    Represents a Expression Map.
    """ ;
    sh:message """
    Expression Map requires one rml:template or one rml:constant or one
    rml:reference.
    """ ;

    # Exactly one rml:template, one rml:constant, one rml:reference,
    # one rml:returnMap, or one rml:functionExecution is required.
    sh:property [
        sh:targetSubjectsOf rml:template ;
        sh:targetSubjectsOf rml:constant ;
        sh:targetSubjectsOf rml:reference ;
        sh:targetSubjectsOf rml:returnMap ;
        sh:targetSubjectsOf rml:functionExecution ;
        sh:path [sh:alternativePath (rml:template 
                                     rml:constant
                                     rml:reference
                                     rml:returnMap
                                     rml:functionExecution)] ;
        rdfs:label "template/constant/reference/returnMap/functionExecution" ;
        rdfs:comment """
        Exactly one rml:template, one rml:constant, one rml:reference,
        one rml:returnMap, or one rml:functionExecution is required.
        """ ;
        sh:message """
        Exactly one rml:template, one rml:constant, one rml:reference,
        one rml:returnMap, or one rml:functionExecution is required.
        """ ;
        sh:minCount 1 ;
        sh:maxCount 1 ;
    ] ;

    # rml:template
    sh:property [
        sh:path rml:template ;
        rdfs:label "template" ;
        rdfs:comment """
        A template (format string) to specify how to generate a value for a 
        subject, predicate, or object, using one or more columns from a logical
        table row or iterator.
        """ ;
        sh:message """
        rml:template must be a string.
        """ ;
        sh:nodeKind sh:Literal ;
        sh:datatype xsd:string ;
    ] ;

    # rml:constant
    sh:property [
        sh:targetSubjectsOf rml:constant ;
        sh:path rml:constant ;
        rdfs:label "constant" ;
        rdfs:comment """
        A property for indicating whether a term map is a constant-valued term 
        map.
        """ ;
        sh:message """
        rml:constant must be an IRI or Literal.
        """ ;
        # Allow BlankNodes so ex:Student works as well for rml:constant
    ] ;

    # rml:reference
    sh:property [
        sh:targetSubjectsOf rml:reference ;
        sh:path rml:reference ;
        rdfs:label "reference" ;
        rdfs:comment """
        A reference rml:reference is used to refer to a column in case of 
        databases, a record in case of CSV or TSV data source, an element in 
        case of XML data source, an object in case of a JSON data source, etc.

        A reference must be a valid identifier, considering the reference 
        formulation (rml:referenceFormulation) specified. The reference can be
        an absolute path, or a path relative to the iterator specified at the 
        logical source. 
        """ ;
        sh:message """
        rml:reference must be a string.
        """ ;
        sh:nodeKind sh:Literal ;
        sh:datatype xsd:string ;
    ] ;

    # rml:returnMap
    sh:property [
        sh:targetSubjectsOf rml:returnMap ;
        sh:path rml:returnMap ;
        rdfs:label "returnMap" ;
        rdfs:comment """
        A Return Map rml:returnMap is used to define the return values of a FnO
        function from the RML-FNML specification. RML Core only validates if the
        property is present and has the right node kind. The actual validation
        happens with RML-FNML SHACL shapes.
        """ ;
        sh:message """
        rml:returnMap must be an IRI;
        """ ;
        sh:nodeKind sh:BlankNodeOrIRI ;
        # Allow BlankNodes so nested structurces works as well for rml:returnMap
    ] ;

    # rml:functionExecution
    sh:property [
        sh:targetSubjectsOf rml:functionExecution ;
        sh:path rml:functionExecution ;
        rdfs:label "functionExecution" ;
        rdfs:comment """
        A Function Execution rml:functionExecution is used to define the FnO 
        function to execute from the RML-FNML specification. RML Core only 
        validates if the property is present and has the right node kind.
        The actual validation happens with RML-FNML SHACL shapes.
        """ ;
        sh:message """
        rml:functionExecution must be an IRI;
        """ ;
        sh:nodeKind sh:BlankNodeOrIRI ;
        # Allow BlankNodes so nested structurces works as well for rml:returnMap
    ] ;
.
